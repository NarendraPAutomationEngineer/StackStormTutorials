# Licensed to the StackStorm, Inc ('StackStorm') under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from __future__ import absolute_import

import inspect
import json
import os
import six

from orquesta.specs import mistral
from orquesta.specs import native


workflow_models = {
	'orquesta': native.WorkflowSpec,
	'mistral': mistral.WorkflowSpec
}


def main():
	scripts_dir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
	schemas_dir = scripts_dir + '/../docs/source/schemas'

	for name, model in six.iteritems(workflow_models):
		schema_text = json.dumps(model.get_schema(), indent=4)
		print('Generated schema for the "%s" model.' % name)

		schema_file = os.path.abspath(schemas_dir + '/' + name + '.json')
		print('Schema will be written to "%s".' % schema_file)

		with open(schema_file, 'w') as f:
			f.write(schema_text)
			f.write('\n')


if __name__ == '__main__':
	main()
